def linear
    "out_size" !
    "in_size" !

    ; W
    ["out_size" @ "in_size" @] "YNX_FLOAT" ynx.NewTensor~ 0 ynx.Register~ 
    ; B
    ["out_size" @] "YNX_FLOAT" ynx.NewTensor~ 0 ynx.Register~ 
    
    1.0 1.0 0 1     ; alpha beta transA transB 
    onnx.Gemm
end

def layer_norm
    "channel_size" !

    ; Scale
    ["channel_size" @ ] "YNX_FLOAT" ynx.NewTensor~ 0 ynx.Register~    
    
    ; B
    ["channel_size" @ ] "YNX_FLOAT" ynx.NewTensor~ 0 ynx.Register~    

    none none none false false 
    onnx.LayerNormalization
end

def two_layer_mlp
    "hidden_size" !
    "in_size" !
    
    "in_size" @ "hidden_size" @ linear
    "hidden_size" @ layer_norm
    0.01 onnx.LeakyRelu

    "hidden_size" @ "hidden_size" @ linear
    "hidden_size" @ layer_norm
    0.01 onnx.LeakyRelu
end

def three_layer_mlp
    "hidden_size" !
    "in_size" !
    
    "in_size" @ "hidden_size" @ linear
    "hidden_size" @ layer_norm
    0.01 onnx.LeakyRelu
    
    {
    "hidden_size" @ "hidden_size" @ linear
    "hidden_size" @ layer_norm
    0.01 onnx.LeakyRelu
    } %2
end

def DDSP
    "pitch"         !
    "loudness"      !

    "pitch" @ 64 256 two_layer_mlp
    "loudness" @ 64 256 two_layer_mlp
    2 1 onnx.Concat

    onnx.Tanh
    512 256 three_layer_mlp

    dup
    256 26 linear swap
    dup
    256 26 linear swap
    256 65 linear
end

def test
    [0.314] [1 64] "YNX_FLOAT" ynx.NewTensorWith~ 
    [0.314] [1 64] "YNX_FLOAT" ynx.NewTensorWith~
    DDSP
    ??
end

